### 红黑树等价于4阶B树 所以一下用B树的样式 分析
#### 我们用 `[x]`表示红色节点，用`(x)`表示黑色节点，`p` = 父节点，`gp` = 祖父节点，`u` = 叔节点

- 添加分析
> 已知B树中新元素必定是添加到叶子节点中，4阶B树中所有节点的元素个数X都符合 1<= X <= 3 ,新建一个节点默认为RED
**案例1：** 
```
                        |                  
                (38)<- [55] -> (80)----------------     
                /   \____        |___________      |
        [17]<-(25)->[33] \                   |    (88)
                         (46)->[50]  [72]<-(76)
    
```
- 情况1.如果添加的是根节点 将 添加的根节点染色成为BLACK 即可
- 情况2. parent  为BLACK 如在  <-(46)    (76)->   <-(88)-> 添加子节点 同样瞒住4阶B树的性质，因此不做任何处理
- 情况3 parent 为RED   <-[17]-> <-[33]-> <-[50]-> <-[72]->
    - 3.1 <-[17]-> <-[33]-> 数据节点上溢的情况 
        - 判定条件：uncle 为RED 
        - 1.parent、uncle 染成BLACK [17] [33]   ---->  (17)  (33) （LL、LR、RL、RR）
        - 2.grand (25) 向上合并 染成红色 [25] 当做是添加的节点进行处理（递归操作） 可能继续发生 上溢，若上溢到根节点只需将根节点 染成黑色即可
    - 3.2 [50]->   RR
            <-[50]   RL
            <-[72]   LL
            [72]->   LR
        - 判定条件：uncle 不为RED 
        LL RR ：parent 染成black ,grand 染成 red      
        LL: grand 右旋转
        RR: grand 左旋转
        
        LR RL ：自己 染成black , grand 染成 red      
        LR:  parent 左旋转 grand 右旋转
        RL: parent 右旋转 grand 左旋转
